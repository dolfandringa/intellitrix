[tool.poetry]
name = "intellitrix"
version = "0.1.0"
description = ""
authors = ["Dolf Andringa <dolfandringa@gmail.com>"]
readme = "README.md"
packages = [{include = "intellitrix", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
imapclient = "^3.0.1"
matrix-nio = {extras = ["e2e"], version = "^0.24.0"}
pydantic = "^2.7.0"
pydantic-settings = "^2.2.1"
simplematrixbotlib = "^2.11.0"
gpiod = "^2.1.3"
pyserial = "^3.5"
pickledb = "^0.9.2"


[tool.poetry.group.dev.dependencies]
ruff = "^0.4.1"
black = "^24.4.0"
isort = "^5.13.2"
pyright = "^1.1.359"
coverage = "^7.4.4"
pytest = "^8.1.1"

[tool.pyright]
stubPath = "./typings"
reportImportCycles = false
typeCheckingMode = "basic"
exclude = ["./typings/*", "**/node_modules", "**/__pycache__", "**/.*"]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--cov",
    "-n", "auto",
    "--ignore=package",
    "--ignore=dist"

]
markers = []

[tool.coverage.report]
exclude_also = [
    "if .*TYPE_CHECKING:",
    "@overload",
    "@typing.overload",
    "@abstractmethod",
    "@abc.abstractmethod",
]
show_missing = true

[tool.coverage.run]
branch = true
omit = []
source_pkgs = ["intellitrix"]

[tool.ruff]
# Ignore max line length - black will handle this and it's okay to go over somtimes.
ignore = ["E501"]

[tool.isort]
profile = "black"
force_single_line = "true"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
